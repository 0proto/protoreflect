// Code generated by protoc-gen-go.
// source: nopkg/desc_test_nopkg_new.proto
// DO NOT EDIT!

package nopkg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TopLevel struct {
	I                            *int32   `protobuf:"varint,1,opt,name=i" json:"i,omitempty"`
	J                            *int64   `protobuf:"varint,2,opt,name=j" json:"j,omitempty"`
	K                            *int32   `protobuf:"zigzag32,3,opt,name=k" json:"k,omitempty"`
	L                            *int64   `protobuf:"zigzag64,4,opt,name=l" json:"l,omitempty"`
	M                            *uint32  `protobuf:"varint,5,opt,name=m" json:"m,omitempty"`
	N                            *uint64  `protobuf:"varint,6,opt,name=n" json:"n,omitempty"`
	O                            *uint32  `protobuf:"fixed32,7,opt,name=o" json:"o,omitempty"`
	P                            *uint64  `protobuf:"fixed64,8,opt,name=p" json:"p,omitempty"`
	Q                            *int32   `protobuf:"fixed32,9,opt,name=q" json:"q,omitempty"`
	R                            *int64   `protobuf:"fixed64,10,opt,name=r" json:"r,omitempty"`
	S                            *float32 `protobuf:"fixed32,11,opt,name=s" json:"s,omitempty"`
	T                            *float64 `protobuf:"fixed64,12,opt,name=t" json:"t,omitempty"`
	proto.XXX_InternalExtensions `json:"-"`
	XXX_unrecognized             []byte `json:"-"`
}

func (m *TopLevel) Reset()                    { *m = TopLevel{} }
func (m *TopLevel) String() string            { return proto.CompactTextString(m) }
func (*TopLevel) ProtoMessage()               {}
func (*TopLevel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

var extRange_TopLevel = []proto.ExtensionRange{
	{100, 1000},
}

func (*TopLevel) ExtensionRangeArray() []proto.ExtensionRange {
	return extRange_TopLevel
}

func (m *TopLevel) GetI() int32 {
	if m != nil && m.I != nil {
		return *m.I
	}
	return 0
}

func (m *TopLevel) GetJ() int64 {
	if m != nil && m.J != nil {
		return *m.J
	}
	return 0
}

func (m *TopLevel) GetK() int32 {
	if m != nil && m.K != nil {
		return *m.K
	}
	return 0
}

func (m *TopLevel) GetL() int64 {
	if m != nil && m.L != nil {
		return *m.L
	}
	return 0
}

func (m *TopLevel) GetM() uint32 {
	if m != nil && m.M != nil {
		return *m.M
	}
	return 0
}

func (m *TopLevel) GetN() uint64 {
	if m != nil && m.N != nil {
		return *m.N
	}
	return 0
}

func (m *TopLevel) GetO() uint32 {
	if m != nil && m.O != nil {
		return *m.O
	}
	return 0
}

func (m *TopLevel) GetP() uint64 {
	if m != nil && m.P != nil {
		return *m.P
	}
	return 0
}

func (m *TopLevel) GetQ() int32 {
	if m != nil && m.Q != nil {
		return *m.Q
	}
	return 0
}

func (m *TopLevel) GetR() int64 {
	if m != nil && m.R != nil {
		return *m.R
	}
	return 0
}

func (m *TopLevel) GetS() float32 {
	if m != nil && m.S != nil {
		return *m.S
	}
	return 0
}

func (m *TopLevel) GetT() float64 {
	if m != nil && m.T != nil {
		return *m.T
	}
	return 0
}

func init() {
	proto.RegisterType((*TopLevel)(nil), "TopLevel")
}

func init() { proto.RegisterFile("nopkg/desc_test_nopkg_new.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 229 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0xcf, 0x3d, 0x4e, 0xc3, 0x40,
	0x10, 0xc5, 0x71, 0xbd, 0x24, 0x8e, 0x8d, 0x09, 0x22, 0xa4, 0x9a, 0x8e, 0x11, 0xd5, 0x88, 0x22,
	0x6e, 0x11, 0x74, 0xd4, 0x54, 0x23, 0x2a, 0x1a, 0x4b, 0x38, 0x4b, 0xe2, 0xcf, 0xdd, 0xd8, 0x6b,
	0x38, 0x1b, 0x47, 0xe2, 0x16, 0x68, 0xb7, 0x49, 0xf3, 0xa4, 0x5f, 0xf1, 0x8a, 0x7f, 0x7e, 0x3f,
	0x58, 0xd7, 0x1e, 0x8b, 0x83, 0x99, 0xaa, 0xd2, 0x9b, 0xc9, 0x97, 0xd1, 0xe5, 0x60, 0x7e, 0xf6,
	0x6e, 0xb4, 0xde, 0x3e, 0xfc, 0x22, 0xcf, 0xde, 0xad, 0x7b, 0x33, 0xdf, 0xa6, 0xdb, 0x6d, 0x72,
	0xd4, 0x04, 0x86, 0x24, 0x8a, 0x3a, 0xa8, 0xa1, 0x05, 0x43, 0x96, 0x8a, 0x26, 0xa8, 0xa5, 0x25,
	0x43, 0xee, 0x14, 0x6d, 0x50, 0x47, 0x2b, 0x86, 0xec, 0x14, 0xf1, 0xd7, 0x53, 0xc2, 0x90, 0x1b,
	0x45, 0x1f, 0x34, 0xd0, 0x9a, 0x21, 0x2b, 0xc5, 0x10, 0x64, 0x29, 0x65, 0x48, 0xaa, 0xb0, 0x41,
	0x8e, 0x32, 0x86, 0xac, 0x15, 0x2e, 0xe8, 0x4c, 0x57, 0x0c, 0xb9, 0x55, 0x9c, 0x83, 0x46, 0xca,
	0x19, 0xb2, 0x55, 0x8c, 0x41, 0x13, 0x5d, 0x33, 0x64, 0xa1, 0x98, 0x82, 0x3c, 0x6d, 0x18, 0x02,
	0x85, 0x7f, 0x4c, 0xb2, 0xc3, 0xf6, 0x2f, 0x7d, 0x7d, 0xfe, 0x78, 0x3a, 0xd6, 0xfe, 0x34, 0x7f,
	0xee, 0x2b, 0xdb, 0x17, 0xcd, 0x69, 0xee, 0x5d, 0x11, 0xab, 0x46, 0xf3, 0xd5, 0x99, 0xca, 0xc7,
	0xec, 0x4b, 0x7b, 0x11, 0xdb, 0x5f, 0xe2, 0xfe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x1b, 0xdb,
	0xa6, 0x19, 0x01, 0x00, 0x00,
}
